%-- Definition of a key-value pair, keys are integers and values are individuals 
tff(pair,type,
    pair: $tType ).

tff(pair_cons,type,
    pair_cons: ( $int * $i ) > pair ).

% Type to represent empty spaces
tff(null,type,
    null: pair ).

tff(get_left,type,
    get_left: pair > $int ).

tff(get_right,type,
    get_right: pair > $i ).

tff(get_left_def,axiom,
    ! [X: $int,Y: $i] : ( get_left(pair_cons(X,Y)) = X ) ).

tff(get_right_def,axiom,
    ! [X: $int,Y: $i] : ( get_right(pair_cons(X,Y)) = Y ) ).

%tff(a,type,
%    a : $i).

%tff(basic_test_concrete,conjecture,
%   ! [X : $int] : get_right(pair_cons(X,a)) = a).

%--tff(basic_test,conjecture,
%--    ![X:$int] : (get_left(pair_cons(X,X)) = get_right(pair_cons(X,X)))).
