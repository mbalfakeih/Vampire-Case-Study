include('sortedness-and-permutations.ax').

%-- Not to be confused with $select for arrays

tff(select,type,
    select: list > list ).

tff(select_cons,axiom,
    ! [X: $int,Xs: list] :
      ( select(cons(X,Xs)) = $let(
          y: $int,
          y:= get_min(cons(X,Xs)),
          cons(y,remove(cons(X,Xs),y)) ) ) ).

tff(selection_sort,type,
    selection_sort: list > list ).

tff(selection_sort_nil,axiom,
    selection_sort(nil) = nil ).

tff(selection_sort_list,axiom,
    ! [X: $int,Xs: list] :
      ( selection_sort(cons(X,Xs)) = $let(
          l: list,
          l:= select(cons(X,Xs)),
          cons(head(l),selection_sort(tail(l))) ) ) ).

%-- Permutation equivalence lemma

%tff(test_conj,conjecture,
%    selection_sort(cons(2,cons(1,nil))) = cons(1,cons(2,nil)) ).

%-- Can't prove these
%tff(test_conj,conjecture,
%    selection_sort(cons(5,cons(2,cons(4,nil)))) = cons(2,cons(4,cons(5,nil))) ).

%tff(test_conj,conjecture,
%   ! [L : list] : ( ($lesseq(length(L),2)) => sorted(selection_sort(L)))).

